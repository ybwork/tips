Ограничения

    Если нужно чтобы значение столбца не встречалось в других записях, используем constraints

Основы архитектуры.

	PostgreSQL реализован в архитектуре клиент-сервер.

	Главный серверный процесс, управляющий файлами баз данных, принимающий подключения клиентских приложений и выполняющий различные запросы клиентов к базам данных. Эта программа сервера БД называется postgres.

	Клиентские приложения могут быть очень разнообразными: это может быть текстовая утилита, графическое приложение, веб-сервер, использующий базу данных для отображения веб-страниц.

	Сервер PostgreSQL может обслуживать одновременно несколько подключений клиентов. Для этого он запускает («порождает») отдельный процесс для каждого подключения. Можно сказать, что клиент и серверный процесс общаются, не затрагивая главный процесс postgres. 

Создание базы данных.

	createdb mydb

	Имена баз данных должны начинаться с буквы и быть не длиннее 63 символов.

	dropdb mydb

Подключение к базе данных.

	Создав базу данных, вы можете обратиться к ней запустив терминальную программу PostgreSQL под названием psql, в которой можно интерактивно вводить, редактировать и выполнять команды SQL.

	psql mydb

	Чтобы выйти из psql, введите: \q или просто q

Основные понятия.

	PostgreSQL — это реляционная система управления базами данных. 

	Это означает, что это система управления данными, представленными в виде отношений (relation). Отношение — это математически точное обозначение таблицы. То есть данные хранятся в таблицах.

	Любая таблица представляет собой именованный набор строк. Все строки таблицы имеют одинаковый набор именованных столбцов, при этом каждому столбцу назначается определённый тип данных.

	Таблицы объединяются в базы данных, а набор баз данных, управляемый одним экземпляром сервера PostgreSQL, образует кластер баз данных.

Основные команды.

	CREATE TABLE users (
		name varchar(80)
	);

	DROP TABLE table_name;

	INSERT INTO weather (city, temp_lo, temp_hi, prcp, date)
    VALUES ('San Francisco', 43, 57, 0.0, '1994-11-29');

    COPY weather FROM '/home/user/weather.txt'; - загрузка большого объёма данных из обычных текстовых файлов



