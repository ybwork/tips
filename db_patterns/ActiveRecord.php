<?php

/*
	ActiveRecord.

	Метод для сохранения сущности в БД добавляются прямо в нее. Чтобы не копипастить метод в каждый класс, его обычно добавляют в базовый класс, а сущность наследуют от него. (в примере ниже класс ActiveRecordBase это базовый класс в котором лежит метод для сохранения сущности) При этом обычно в сущности делается метод, возвращающий информацию о соответствии полей объекта таблице и полям в базе данных (чтобы можно было правильно составить SQL запрос):
*/

class News extends ActiveRecordBase
{
    protected function getTableName()
    {
    	// имя таблицы с новостями
        return 'news';
    }
    
    protected function getFields()
    {
        // список полей, которые отображаются на таблицу
        return array('id', 'title', 'text', 'date', 'categId'); 
    }
}

/*
	Подход выше относительно прост, но он имеет недостаток: мы смешиваем бизнес-логику (методы работы со свойствами новости) и работу с БД в одном классе. Но это спорный вопрос, потому что в том же Laravel модель подключается отдельно.
*/

/*
    Этот подход используется в Doctrine 1
*/