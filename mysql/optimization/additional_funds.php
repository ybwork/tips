<?php

/*
    Глава 5. Расширенные средства MySQL
*/

/*
    Например, хранимые процедуры, представления и триггеры.
*/

/*
    Кэш запросов MySQL.

    В кэше запросов MySQL хранится в точности тот результат, который запрос вернул клиенту. При попадании в кэш запросов сервер сразу же возвращает сохраненные итоги, пропуская стадии разбора, оптимизации и выполнения.

    Кэш запросов отслеживает, какие таблицы были использованы в запросе, и, если хотя бы одна из них изменилась, данные в кэше становятся недействительными.

    Следует также иметь в виду, что результат не попадет в кэш запросов, если сгенерирован недетерминированным запросом. Иначе говоря, любой запрос, содержащий недетерминированную функцию, например NOW() или CURRENT_DATE(), не кэшируется. Аналогично, такие функции, как CURRENT_USER() и CONNECTION_ID(), дают разные результаты в зависимости от того, каким пользователем вызваны, поэтому также препятствуют записи запроса в кэш.

    Кроме того, кэш не работает для запросов, в которых есть ссылки на определенные пользователем функции, хранимые процедуры, пользовательские переменные, временные таблицы и т.д.

    Использовать:

        Есть полезный прием, позволяющий все же закэшировать запросы, ссылающиеся на текущую дату; для этого нужно включить дату в виде литерала, вместо использования функции. Например:

            DATE_SUB(CURRENT_DATE, INTERVAL 1 DAY) - не кэшируется!

            DATE_SUB(‘2007-07-14’, INTERVAL 1 DAY) - кэшируется

    Минусы кэширования запросов:

        - Перед началом обработки запроса на чтение нужно проверить, есть ли он в кэше

        - Если запрос допускает кэширование, но еще не помещен в кэш, то нужно потратить некоторое время на запись в кэш сгенерированных результатов

        - Наконец, при обработке любого запроса на запись необходимо сделать недействительными все записи в кэше, в которых встречается измененная таблица

    Пользователей InnoDB подстерегает еще одна проблема: полезность кэша ограничена транзакциями. Если какая-то команда внутри транзакции модифицирует таблицу, то сервер делает недействительными все кэшированные запросы, ссылающиеся на эту таблицу.
*/

/*
    Когда полезен кэш запросов.

    Выигрывают от наличия кэша те запросы, которые долго выполняются, но занимают в кэше немного места, так что их хранение, возврат клиенту и инвалидация обходятся дешево. В эту категорию попадают, в частности, агрегирующие запросы, например, с функцией COUNT() для больших таблиц. Но есть и много других типов запросов, которые имеет смысл кэшировать.
*/

/*
    Как настраивать и обслуживать кэш запросов.

        query_cache_type - режим кэширования запросов. Допустимые значения: OFF, ON, DEMAND.

        query_cache_size - общий объем памяти, отведенной под кэш запросов, в байтах. Значение должно быть кратно 1024, поэтому MySQL, возможно, слегка изменит заданное вами число.

        query_cache_min_res_unit - 
*/