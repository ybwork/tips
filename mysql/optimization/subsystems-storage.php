<?php

/*
    Подсистема хранения MyISAM.

        Подсистема MyISAM ставит блокировки на уровне таблиц. Убедитесь, что это не создает узких мест.

        Отсутствие автоматического восстановления данных. Если происходит сбой сервера MySQL или потеря электропитания, вам нужно проверить и, возможно, восстановить таблицы MyISAM до их использования.

        Отсутствие поддержки транзакций.

        В памяти кэшируются только индексы. MyISAM кэширует внутри процесса MySQL только индексы – в буфере ключей.

        Компактное хранение. Строки хранятся упакованными, одна за другой, так что занимают немного места на диске, а полное сканирование таблицы происходит быстро.

    Подсистема хранения Memory.

        Табличные блокировки. Подобно MyISAM подсистема Memory ставит блокировки на уровне таблиц. Однако это не проблема, поскольку запросы к таблицам типа Memory обычно выполняются быстро.

        Отсутствие динамических строк. В подсистеме Memory не поддерживаются динамические строки (то есть строки переменной длины), поэтому поля типа BLOB и TEXT не поддерживаются вовсе. Даже тип VARCHAR(5000) превращается в CHAR(5000) – очень большой расход памяти, если длина большинства значений мала.

        По умолчанию строятся хеш-индексы. 

        Отсутствие статистики индексов. 

        При перезапуске содержимое теряется. Подсистема Memory не сохраняет данные на диске, в связи с чем при перезапуске сервера данные теряются, хотя определения таблиц сохраняются.

    Подсистема хранения InnoDB.

        InnoDB поддерживает транзакции и четыре уровня изоляции транзакций.

        Внешние ключи. В версии MySQL 5.0 InnoDB является единственной подсистемой хранения, поддерживающей внешние ключи.

        Блокировки строк. Блокировки устанавливаются на уровне строк. Эскалация блокировок не производится, выборки не блокируют данные – стандартная команда SELECT вообще не захватывает никаких блокировок, что обеспечивает очень высокую степень совместной работы.

        Многоверсионность. InnoDB использует многоверсионное управление совместным доступом, так что по умолчанию команда SELECT может считать устаревшие данные.

        Кластеризация по первичному ключу.

        Все индексы содержат столбцы первичного ключа. Индексы ссылаются на строки по первичному ключу, поэтому удлинение первичного ключа приводит к резкому увеличению размера индексов.

        Оптимизированное кэширование. InnoDB кэширует данные и индексы в пуле буферов. Она также автоматически строит хеш-индексы для ускорения выборки строк.

        Неупакованные индексы. Префиксное сжатие индексов в этой подсистеме не предусмотрено, поэтому размер индексов может быть значительно больше, чем в MyISAM.

        Медленная загрузка данных. В версии MySQL 5.0 подсистема хранения InnoDB не оптимизирует операции загрузки данных. Она строит индексы построчно, а не методом сортировки. Это может значительно уменьшить скорость загрузки данных.

        Блокировка AUTO_INCREMENT. В версиях, предшествующих MySQL 5.1, InnoDB захватывает табличную блокировку для порождения очередного значения автоинкрементного столбца.

        Значения COUNT(*) не кэшируются. В отличие от таблиц MyISAM и Memory, InnoDB не хранит информацию о количестве строк в таблице, а это означает, что запросы COUNT(*) без фразы WHERE не могут быть оптимизированы и требуют полного сканирования таблицы или индекса.
*/