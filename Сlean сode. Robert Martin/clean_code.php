<?php

/*
    Предисловие.

        - Мелочи важны

        - Профессионалы выделяют некоторое время на обдумывание и планироване проекта

        - Рассматривайте свой код, как красивое воплощение благородных усилий по проектированию, как процесса, а не конечной статической точки
*/

/*
    Глава 1. Чистый код.

    Более того, они - и все остальные участники группы - находятся под страшным давлением со стороны начальства. В спешке они работают все небрежнее, отчего производительность только продолжает падать.

    Но постойте! - скажете вы. Если я не сделаю то, что говорить мой начальник, меня уволят. Скорее всего нет. Обычно начальники хотят знать правду, даже если по их поведению этого не скажешь. Они могут страстно защищать график и требования, но это их работа. А ваша работа - так же страстно защищать код.

    Единственный способ выдержать график и работать быстро - постоянно поддерживать чистоту в коде.

    Суть в том, что чистый код уделяет пристальное внимание мелочам.

    Не язык делает программы простыми. Программа выглядит простой благодаря работе программиста.

    Когда вы в следующий раз напишите строку кода, вспомните, что вы - автор, и пишите для читателей, которые будут оценивать плоды вашей работы.

    Соотношение времени чтения и написания кода превышает 10:1, поэтому наш код должен легко читаться, даже если это затрудняет его написание.

    Хорошо написать код недостаточно. Нобходимо поддерживать чистоту кода с течением времени. "Оставь место стоянки чище, чем оно было до твоего прихода". Чистка не обязана быть глобальной. Можно присвоить более понятное имя переменной, разбить слишком большую функцию или устранить сложную цепочку if.
*/

/*
    Глава 2. Содержательные имена.

    Имена переменных должны передавать намерения программиста. Они должны отвечать на все главные вопросы. Например, что измеряется и в каких единицах - $days_since_creation (дни со времени создания)

    Не использовать слова со скрытыми значениями. Например $hp, aix и т.д.

    Остерегаться малозаметных различий в именах. Например XyzControllerHandlingOfString и XyzControllerStorageOfString

    Не создавать имена, которые не несут полезной иформации. Например Product, ProductInfo, ProductData. В данном примере Info и Data не несут полезной информации.
*/