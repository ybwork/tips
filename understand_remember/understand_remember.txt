Указатель.

	Веб в целом.

	Клиент серверное взаимодействие.

	Протоколы. (http, https, WebSocket, ftp, smtp, soap, tcp/ip)

	Авторизация, аутентификация, безопасность.

	Язык и его тонкости. История.

	ООП.

	MVC.

	SOLID.

	DRY.

	База и её тонкости.

	Стандартные виды запросов.

	Оптимизация запросов.

	Оптимизация в целом. (кэширование, proxy reverse)

	Книга алгориты и структуры данных.

	Заготовки на аутентификацию, ajax, crud.

Веб в целом.

	Интернет это всемирная система объединённых компьютерных сетей для хранения и передачи информации.

	Компьютерная сеть - система, обеспечивающая обмен данными между компьютерами, серверами и другим оборудованием.

	Каждый компьютер в сети подключается к маршрутизатору. Маршрутизатор следит за тем, чтобы пакет, отправленный одним компьютером был получен другим компьютером.

	Чтобы послать сообщение какому-то компьютеру, необходимо как-то обратиться к нему. Поэтому каждый компьютер, подключенный к сети, имеет свой уникальный адрес для связи. Этот адрес называют IP-адресом (Internet Protocol). В зависимости от версии протокола IP этот адрес может записываться по-разному. Самая широко используемая версия интернет-протокола — версия 4. Адреса IPv4 обычно записываются в виде четырёх чисел, разделенных точками, например: 192.168.2.10.

    Для того чтобы обратиться к конкретному компьютеру в сети из вне нужно назначить порт на котором будет доступен этот компьютер.

    Чтобы узнать ip адрес компьютера вводим в консоль ipconfig /all

	Мы можем присвоить каждому IP-адресу псевдоним с понятным для человека именем. Такой псевдоним называют доменным именем. Например, google.com — доменное имя, которое является псевдонимом IP-адреса 173.194.121.32. Использование доменного имени — самый простой способ обратиться к компьютеру в интернете.

	Следующий шаг — передать сообщение из нашей сети в сеть, с которой мы хотим связаться. Чтобы сделать это, мы должны подключить нашу сеть к провайдеру услуг интернета. Интернет провайдер имеет специальные маршрутизаторы, которые связаны с маршрутизаторами других провайдеров. Таким образом, наше сообщение, пройдя транзитом через сеть нескольких провайдеров, достигнет сеть назначения.

	Интернет построен на базе протокола IP. 

	Начинается работа над созданием первой интернет-сети ARPANet.

    В 1984 году была разработана система доменных имён (англ. Domain Name System, DNS).

    В 1989 году в Европе, в стенах Европейского совета по ядерным исследованиям (ЦЕРН) родилась концепция Всемирной паутины. Её предложил знаменитый британский учёный Тим Бернерс-Ли, он же в течение двух лет разработал протокол HTTP, язык HTML и идентификаторы URI. В рамках проекта Бернерс-Ли написал первый в мире веб-сервер «httpd»

    Первый в мире веб-сайт Бернерс-Ли создал по адресу http://info.cern.ch

    В 1990 году сеть ARPANET прекратила своё существование, полностью проиграв конкуренцию NSFNet.

    В 1991 году Всемирная паутина стала общедоступна в интернете, а в 1993 году появился знаменитый веб-браузер NCSA Mosaic.

    В 1995 году был образован Консорциум Всемирной паутины (W3C).

    3 июня 2011 года была принята резолюция ООН, признающая доступ в Интернет базовым правом человека. Таким образом, отключение тех или иных регионов от Интернета является нарушением прав человека.

    На основе Интернета работает Всемирная паутина (World Wide Web, WWW) и множество других систем передачи данных.

Авторизация, аутентификация, безопасность.

	Основная цель аутентификации - это удостовериться в том, что тот, кто пытается выполнить какое-либо действие, имеет на это право. Стандартный способ управления этим процессом заключается в том, что пользователь логинится через форму входа. Как только пользователь залогинен, вы отслеживаете его дальнейшие действия с помощью сессий, пока он не выйдет.

	Авторизация - это другая концепция, связанная с аутентификацией. Вы можете быть залогинены, но есть ли у вас права на действия, которые вы хотите осущестивить (просмотреть страницу, изменить или удалить элемент)? Банальный пример это разница между обычным пользователем и администратором сайта. Они оба залогинены, но только у админа есть права на изменение определенных вещей.

	Аутентификация и авторизация идут рука об руку -- сперва вы аутентифицируете кого-то, чтобы понять, кто это, и далее можете проверить, есть ли у них права на просмотр страницы или выполнение действия. При создании приложения у вас будет система аутентификации, чтобы пользователь мог залогиниться и подтвердить, что это именно он. Вы разрешаете пользователю делать определенные вещи (например, удалять какой-то контент), основываясь на том, какие методы защищены фильтрами контроллера, требующими входа на сайт или наличия определенных прав (например, прав администратора).

	



