<?php

/*
    PSR - 1.

    В файле допустипо использовать только эти теги: <?php, <?=

    Кодировака файла должна быть UTF-8 without BOM.

    Классы должны быть подключенны через автозагрузчик.

    Имена классов должны быть в формате ProductController.

    Константы должны быть в верхнем регистре и через нижнее подчёркивание DATABASE_PASSWORD

    Имена методов должны быть в camelCase (getByInvoiceNum)

    Переменные можно назвывать в любом стиле, но лучше выбрать один и предерживаться его. Раз имена классво и методов в camelCase, то в именах переменных делаю выбор в пользу camelCase.
*/

/*
    Код в файле должен быть без побочных еффектов. Побочным эффектом в файле является например подключение другого файла и вызов кода из этого файла. Например посреди кода одного файла, подключается другой файл и вызывается функция из него
*/
public function show()
{

}

show();

include 'user.php';

get();

// Правильный пример
if (!function_exists('show')) {
    function show()
    {
        return 'show';
    }
}

/*
    PSR-2.

    В коде нужно использовать 4 пробела и не использовать табуляцию.

    Длинна строки должна быть 80 или меньше символов.

    После namespace и use должна быть пустая строка (use идёт после namespace)

    После объявления функции фигурные скобки открываются на новой строке. При этом не должно быть пустых строк ни перед первой скобкой, ни перед второй.

    Перед каждым объявлением функции нужно указывать её доступность - static, public и т.д.

    После каждого слова в функции должен быть один пробел. Пример public function get();

    Все файлы должны заканчиваться пустой строкой.

    Ключевые слова true, false, null пишутся в нижней регистре.

    Аргументы метода идут через запятую. Отступа до зяпятой не должно быть, отступ после запятой должен присутствовать. Аргументы по умолчанию должны идти последними и для указания их аргументов использоваться пробел. save($name, $sername, hobby = []);

    После имени метода, перед кргулыми скобками не должно быть отсутпов.

    Слова extends и implements должны быть на одной линии с названием класса.

    implements может быть множественный и тогда нужно располагать каждое имя интерфейса на нвоой строке. Например:

        class Product implements
            MySQLProduct
            PostgreSQLProduct

    Конструкция if elseif else должна быть разделена пробелами между скобками и каждое новое условие должно быть на одной линии с закрывающим фигурной скобкой. Пример:

        if ($expr1) {

        } elseif ($expr2) {

        } else {

        }

    В конструкции switch дожны быть такие разделения:

        switch ($expr) {
            case 0:
                echo 'First case, with a break';
                break;
            case 1:
                echo 'Second case, which falls through';
            case 2:
            case 3:
            case 4:
                echo 'Third case, return instead of break';
                return;
            default:
                echo 'Default case';
                break;
        }

    В конструкции while дожны быть такие разделения:

        while ($expr) {
    
        }

        do {
    
        } while ($expr) {
    
        }

    В конструкции for дожны быть такие разделения:

        for ($i = 0; $i < 10; $i++) {
            // for body
        }

    В конструкции foreach дожны быть такие разделения:

        foreach ($iterable as $key => $value) {
            // foreach body
        }

    В конструкции try catch дожны быть такие разделения:

        try {
            // try body
        } catch (FirstExceptionType $e) {
            // catch body
        } catch (OtherExceptionType $e) {
            // catch body
        }
*/