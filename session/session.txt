Сессии.

    Все взаимодействия между бразерами и серверами осуществляются при помощи протокола HTTP, который не сохраняет свое состояние (stateless).

    Так как HTTP — это клиент-серверный протокол, HTTP сессия состоит из трёх фаз:

        1. Клиент устанавливает TCP соединения

        2. Клиент отправляет запрос и ждёт ответа.

        3. Сервер обрабатывает запрос и посылает ответ, в котором содержится код статуса и соответствующие данные. 

    Начиная с версии HTTP/1.1, после третьей фазы соединение не закрывается, так как клиенту позволяется инициировать другой запрос. То есть, вторая и третья фазы могут повторяться.

    Сессии являются механизмом, который использует Django (да и весь остальной "Интернет") для отслеживания "состояния" между сайтом и каким-либо браузером. 

    Сессии позволяют вам хранить произвольные данные браузера и получать их в тот момент, когда между данным браузером и сайтом устанавливается соединение. 

    Django использует куки (cookie), которые содержат специальный идентификатор сессии, который выделяет среди остальных, каждый браузер и соответствующую сессию. 

    Реальные данные сессии, по умолчанию, хранятся в базе данных сайта (это более безопасно, чем сохранять данные в куки, где они могут быть уязвими для злоумышленников)

    Например при авторизации создаётся хешированное значение, которое записывается в базу, сессию и в cookie.

    Браузер передаёт cookie в которой лежит id сессии, а механизм на бэкэнде сравнивает этот id со значением в сессии.

    Если значение сессии изменилось в базе, то оно должно измениться в сессии и cookie

    Как вариант после выхода с сайта сбрасывать значение. 